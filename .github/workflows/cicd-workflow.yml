name: CICD

on:
  push:
    branches: [ deploy-to-ecs-fargate ]

jobs:
  build-and-deploy:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        # uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        # uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
          
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: public.ecr.aws/b7w9u8z7
          IMAGE_NAME: nodejs
          IMAGE_TAG: latest
          # ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nodejs-for-lic
          # IMAGE_TAG: ${{ steps.tag_version.outputs.new_version  }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          echo "ECR_REGISTRY --- $ECR_REGISTRY"
          echo "IMAGE_TAG --- $IMAGE_TAG"
          # docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          # docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f .
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          #############################
          # docker build -t <image-name> .
          # docker build -t $IMAGE_NAME .
          # An image does not exist locally with the tag: public.ecr.aws/nodejs-for-lic/nodej
          # docker build -t public.ecr.aws/$ECR_REPOSITORY/$IMAGE_NAME .
          echo "----- DOCKER BUILD STARTED ----"
          docker build -t nodejs-for-lic .
          echo "----- DOCKER BUILD COMPLETED ----"
          echo "----- DOCKER IMAGE LIST ----"
          docker images
          # docker tag <image-name> public.ecr.aws/<repo-name>/<image-name>
          # docker tag $IMAGE_NAME public.ecr.aws/$ECR_REPOSITORY/$IMAGE_NAME
          # docker tag $IMAGE_NAME $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
          echo "----- DOCKER TAG STARTED ----"
          docker tag nodejs-for-lic:latest public.ecr.aws/b7w9u8z7/nodejs-for-lic:latest
          echo "----- DOCKER TAG COMPLETED ----"
          echo "----- DOCKER IMAGE LIST ----"
          docker images
          # docker push public.ecr.aws/<repo-name>/<image-name>
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
          # docker push public.ecr.aws/$ECR_REPOSITORY/$IMAGE_NAME
          echo "----- DOCKER PUSH STARTED ----"
          docker push public.ecr.aws/b7w9u8z7/nodejs-for-lic:latest
          echo "----- DOCKER PUSH COMPLETED ----"
          #############################
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=public.ecr.aws/b7w9u8z7/nodejs-for-lic:latest" >> $GITHUB_OUTPUT    

